{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAM,EAAM,KAOZ,AAJe,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EADO,SAAS,gBAAgB,CAAC,Y,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EACvB,OAAO,CAAC,SAAC,CAAlC,EACE,OAAA,MAAM,IAAI,CAAC,EAAK,gBAAgB,CAAC,S,GAG5B,OAAO,CAAC,SAAC,CAAhB,EACE,IAAM,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,YAAY,CAAC,MAAO,EAAM,EAAE,EAElC,IAAM,EAAY,EAAM,IAAI,CAAC,OAAO,CAAC,EAAK,KAE1C,CAAA,EAAM,WAAW,CAAG,EAEpB,IAAM,EAAkB,GAAuC,MAAA,CAApC,EAAU,MAAM,CAAC,GAAG,WAAW,IAAwB,MAAA,CAAnB,EAAU,KAAK,CAAC,IAE/E,EAAM,YAAY,CAAC,cAAe,GAElC,EAAM,UAAU,CAAC,YAAY,CAAC,EAAO,EACvC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable function-paren-newline */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar reg = /N/g;\nvar divFields = _to_consumable_array(document.querySelectorAll(\".field\"));\nvar inputs = divFields.flatMap(function(elem) {\n    return Array.from(elem.querySelectorAll(\"input\"));\n});\ninputs.forEach(function(input) {\n    var label = document.createElement(\"label\");\n    label.classList.add(\"field-label\");\n    label.setAttribute(\"for\", input.id);\n    var inputName = input.name.replace(reg, \" N\");\n    label.textContent = inputName;\n    var placeholderText = \"\".concat(inputName.charAt(0).toUpperCase()).concat(inputName.slice(1));\n    input.setAttribute(\"placeholder\", placeholderText);\n    input.parentNode.insertBefore(label, input);\n});\n\n//# sourceMappingURL=index.97c48053.js.map\n","/* eslint-disable function-paren-newline */\n'use strict';\n\nconst reg = /N/g;\n\nconst divFields = [...document.querySelectorAll('.field')];\nconst inputs = divFields.flatMap((elem) =>\n  Array.from(elem.querySelectorAll('input')),\n);\n\ninputs.forEach((input) => {\n  const label = document.createElement('label');\n\n  label.classList.add('field-label');\n  label.setAttribute('for', input.id);\n\n  const inputName = input.name.replace(reg, ' N');\n\n  label.textContent = inputName;\n\n  const placeholderText = `${inputName.charAt(0).toUpperCase()}${inputName.slice(1)}`;\n\n  input.setAttribute('placeholder', placeholderText);\n\n  input.parentNode.insertBefore(label, input);\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","reg","inputs","divFields","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","flatMap","elem","forEach","input","label","createElement","classList","add","setAttribute","id","inputName","replace","textContent","placeholderText","concat","charAt","toUpperCase","parentNode","insertBefore"],"version":3,"file":"index.97c48053.js.map"}